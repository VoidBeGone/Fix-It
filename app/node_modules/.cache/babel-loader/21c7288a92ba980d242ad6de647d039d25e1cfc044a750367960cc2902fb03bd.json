{"ast":null,"code":"var _jsxFileName = \"/Users/peteryoo/Fix-It/app/src/Components/JS/ServicePage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../style/ServicePage.css\";\nimport ScheduleModal from \"./ScheduleModal.js\";\nimport { gsap } from \"gsap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ServicePage({\n  keepServicePage\n}) {\n  _s();\n  const description = `Description`;\n  const modelRef = React.useRef();\n  const [serviceSchedule, setterServiceSchedule] = React.useState(false);\n  const setServiceSchedule = () => {\n    setterServiceSchedule(true);\n  };\n  const resetServiceSchedule = () => {\n    setterServiceSchedule(false);\n  };\n  const animateOut = onComplete => {\n    gsap.to(modelRef.current, {\n      backgroundColor: \"white\",\n      duration: 0.5,\n      ease: \"power2.in\",\n      onComplete: () => {\n        gsap.to(modelRef.current, {\n          opacity: 0,\n          scale: 0.9,\n          duration: 0.4,\n          ease: \"power2.in\",\n          onComplete: onComplete // This will trigger resetServiceSchedule after the animation finishes\n        });\n      }\n    });\n  };\n  React.useEffect(() => {\n    if (serviceSchedule) {\n      // Animate the modal in\n      gsap.fromTo(modelRef.current, {\n        opacity: 0.5,\n        backgroundColor: \"white\"\n      }, {\n        opacity: 1,\n        backgroundColor: \"#e9e9e9\",\n        duration: 0.5,\n        ease: \"power2.in\"\n      });\n\n      // Handle outside click to trigger close\n      const handleClickOutside = event => {\n        if (modelRef.current && !modelRef.current.contains(event.target)) {\n          animateOut(resetServiceSchedule); // Animate out and reset the schedule modal\n        }\n      };\n\n      // Add event listener for outside clicks when the modal is open\n      document.addEventListener(\"mousedown\", handleClickOutside);\n\n      // Clean up the event listener when the modal closes\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }\n  }, [serviceSchedule]); // Re-run the effect when serviceSchedule changes\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [serviceSchedule && /*#__PURE__*/_jsxDEV(ScheduleModal, {\n      closeModal: resetServiceSchedule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ServicePage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ServicePageContainer\",\n        ref: modelRef,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SPTitle\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SPImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SPReviews\",\n          children: \"5 Stars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SPDescription\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SPFormButton\",\n          onClick: setServiceSchedule,\n          children: \"Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ServicePage, \"AqMfhLT19MyTBpfm4vHpYa1gPTs=\");\n_c = ServicePage;\nvar _c;\n$RefreshReg$(_c, \"ServicePage\");","map":{"version":3,"names":["React","ScheduleModal","gsap","jsxDEV","_jsxDEV","Fragment","_Fragment","ServicePage","keepServicePage","_s","description","modelRef","useRef","serviceSchedule","setterServiceSchedule","useState","setServiceSchedule","resetServiceSchedule","animateOut","onComplete","to","current","backgroundColor","duration","ease","opacity","scale","useEffect","fromTo","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","children","closeModal","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/peteryoo/Fix-It/app/src/Components/JS/ServicePage.js"],"sourcesContent":["import React from \"react\";\nimport \"../style/ServicePage.css\";\nimport ScheduleModal from \"./ScheduleModal.js\";\nimport { gsap } from \"gsap\";\n\nexport default function ServicePage({ keepServicePage }) {\n  const description = `Description`;\n\n  const modelRef = React.useRef();\n  const [serviceSchedule, setterServiceSchedule] = React.useState(false);\n\n  const setServiceSchedule = () => {\n    setterServiceSchedule(true);\n  };\n\n  const resetServiceSchedule = () => {\n    setterServiceSchedule(false);\n  };\n\n  const animateOut = (onComplete) => {\n    gsap.to(modelRef.current, {\n      backgroundColor: \"white\",\n      duration: 0.5,\n      ease: \"power2.in\",\n      onComplete: () => {\n        gsap.to(modelRef.current, {\n          opacity: 0,\n          scale: 0.9,\n          duration: 0.4,\n          ease: \"power2.in\",\n          onComplete: onComplete, // This will trigger resetServiceSchedule after the animation finishes\n        });\n      },\n    });\n  };\n\n  React.useEffect(() => {\n    if (serviceSchedule) {\n      // Animate the modal in\n      gsap.fromTo(\n        modelRef.current,\n        { opacity: 0.5, backgroundColor: \"white\" },\n        { opacity: 1, backgroundColor: \"#e9e9e9\", duration: 0.5, ease: \"power2.in\" }\n      );\n\n      // Handle outside click to trigger close\n      const handleClickOutside = (event) => {\n        if (modelRef.current && !modelRef.current.contains(event.target)) {\n          animateOut(resetServiceSchedule); // Animate out and reset the schedule modal\n        }\n      };\n\n      // Add event listener for outside clicks when the modal is open\n      document.addEventListener(\"mousedown\", handleClickOutside);\n\n      // Clean up the event listener when the modal closes\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }\n  }, [serviceSchedule]); // Re-run the effect when serviceSchedule changes\n\n  return (\n    <>\n      {serviceSchedule && <ScheduleModal closeModal={resetServiceSchedule} />}\n      <div className=\"ServicePage\">\n        <div className=\"ServicePageContainer\" ref={modelRef}>\n          <div className=\"SPTitle\">Title</div>\n          <div className=\"SPImage\"></div>\n          <div className=\"SPReviews\">5 Stars</div>\n          <div className=\"SPDescription\">{description}</div>\n          <div className=\"SPFormButton\" onClick={setServiceSchedule}>\n            Schedule\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}